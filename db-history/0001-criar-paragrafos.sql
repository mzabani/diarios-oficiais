create table paragrafodiario (
    id int generated by default as identity primary KEY
    , conteudodiarioid int not null references conteudodiario(id)
    , ordem int not null
    , conteudo text not null
    , portuguese_conteudo_tsvector tsvector 
    , unique (conteudodiarioid, ordem)
);
CREATE INDEX ON paragrafodiario USING GIN (portuguese_conteudo_tsvector);
CREATE FUNCTION update_paragrafodiario_portuguese_conteudo_tsvector() RETURNS TRIGGER LANGUAGE plpgsql AS 
 $BODY$
   BEGIN
     UPDATE paragrafodiario SET portuguese_conteudo_tsvector = to_tsvector('portuguese', NEW.conteudo) WHERE id=NEW.id;
     RETURN NEW;
   END;
 $BODY$;
CREATE TRIGGER paragrafodiario_portuguese_conteudo_tsvector_on_insert AFTER INSERT ON paragrafodiario FOR EACH ROW EXECUTE PROCEDURE update_paragrafodiario_portuguese_conteudo_tsvector();
CREATE TRIGGER paragrafodiario_portuguese_conteudo_tsvector_on_update AFTER UPDATE ON paragrafodiario FOR EACH ROW WHEN (OLD.conteudo != NEW.conteudo) EXECUTE PROCEDURE update_paragrafodiario_portuguese_conteudo_tsvector();
-- ^ Um índice sobre a expressão to_tsvector('portuguese', conteudo) infelizmente não é usado em buscas Full Text por conta de palavras longas demais para serem indexadas.. como coluna isso não acontece